@{
    ViewBag.Title = "Index";
}


<script src="/Scripts/d3.v3.js"></script>
<script src="/Scripts/jquery-1.9.1.min.js"></script>

<h2>Index</h2>

<input type="text" name="make" value="" />
<input type="text" name="model" value="" />
<input type="text" name="maxPrice" value="" />

<input type="button" name="draw" onclick="drawClick()" value="Draw" />

<div id="chart" style="padding: 20px">

</div>

<script>
    globalData = null;

    d3.json("/Data/data.js", function (error, data) {
        data.forEach(function (d) {
            d.Price = +d.Price;
            d.Year = +d.Year;
        });

        globalData = data;
    });

    function drawClick() {
        var filteredData = globalData;

        filteredData = filteredData.filter(function (d) { return d.Price < 50000; });

        var make = $("input[name='make']").val();
        if (make !== "") {
            filteredData = filteredData.filter(function(d) { return d.Make === make; });
        }

        var model = $("input[name='model']").val();
        if (model !== "") {
            filteredData = filteredData.filter(function (d) { return d.Model === model; });
        }

        drawChart(filteredData);
    }

    function drawChart(data) {
        $("#chart").empty();

        var margin = { top: 30, right: 30, bottom: 40, left: 80 },
        width = 960 - margin.left - margin.right,
        height = 500 - margin.top - margin.bottom;

        var x = d3.scale.linear()
            .range([0, width]);

        var y = d3.scale.linear()
            .range([height, 0]);

        var color = d3.scale.category10();

        var xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");

        var yAxis = d3.svg.axis()
            .scale(y)
            .orient("left");

        var svg = d3.select("#chart").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
          .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        var yearExtents = d3.extent(data, function (d) { return d.Year; });
        yearExtents[0]--;
        yearExtents[1]++;

        x.domain(yearExtents);
        y.domain(d3.extent(data, function (d) { return d.Price; })).nice();

        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis)
          .append("text")
            .attr("class", "label")
            .attr("x", width)
            .attr("y", -6)
            .style("text-anchor", "end")
            .text("Year");

        svg.append("g")
            .attr("class", "y axis")
            .call(yAxis)
          .append("text")
            .attr("class", "label")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .text("Price")

        svg.selectAll(".dot")
          .data(data)
        .enter().append("circle")
          .attr("class", "dot")
          .attr("r", 3.5)
          .attr("cx", function (d) { return x(d.Year); })
          .attr("cy", function (d) { return y(d.Price); })
          .style("fill", function (d) { return color(d.Model); });

        var legend = svg.selectAll(".legend")
            .data(color.domain())
          .enter().append("g")
            .attr("class", "legend")
            .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

        legend.append("rect")
          .attr("x", width - 18)
          .attr("width", 18)
          .attr("height", 18)
          .style("fill", color);

        legend.append("text")
            .attr("x", width - 24)
            .attr("y", 9)
            .attr("dy", ".35em")
            .style("text-anchor", "end")
            .text(function (d) { return d; });
    }
</script>
